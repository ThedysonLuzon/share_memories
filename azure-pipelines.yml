# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: 'Build React Client Stage'
  
  jobs: 
  - job: Build
    displayName: 'Build'
    
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - task: Npm@1
      displayName: 'Install NPM packages'
      inputs:
        command: 'install'
        workingDir: 'client'

    - task: Npm@1
      displayName: 'Build React App'
      inputs:
        command: 'custom'
        workingDir: 'client'
        customCommand: 'run build'

      
    - task: Npm@1
      displayName: 'Test React App'
      inputs:
        command: 'custom'
        workingDir: 'client'
        customCommand: 'run test'

    - task: PublishCodeCoverageResults@1
      displayName: 'Code Coverage'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: 'client/coverage/cobertura-coverage.xml'

    - task: Npm@1
      displayName: 'ESLint Code analysis'
      inputs:
        command: 'custom'
        workingDir: 'client'
        customCommand: 'run lint'
        
    # - task: PublishBuildArtifacts@1
    #   displayName: 'Publish Artifact to Azure'
    #   inputs:
    #     PathtoPublish: '$(Build.SourcesDirectory)/client/build'
    #     ArtifactName: 'Share-Memories-React'
    #     publishLocation: 'Container'
      
      
- stage: Deliver
  displayName: 'Deliver React App'
  dependsOn: Build
  
  jobs: 
  - job: Deliver
    displayName: 'Deliver'

    steps:
    # - script: |
    #     ls $(System.DefaultWorkingDirectory)/client/build
    #   displayName: 'List Build DefaultWorkingDirectory Contents'

    - script: |
        ls $(Build.SourcesDirectory)/client/build
      displayName: 'List Build SourcesDirectory Contents'
    
    - script: |
        ls $(Pipeline.Workspace)/client/build
      displayName: 'List Pipeline.Workspace Contents'

    - task: PublishBuildArtifacts@1
      inputs:
        # pathtoPublish: '$(Pipeline.Workspace)/client/build'
        # pathtoPublish: '$(System.DefaultWorkingDirectory)/client/build'
        pathtoPublish: '$(Build.SourcesDirectory)/client/build'
        artifactName: 'Share-Memories-React'
      displayName: 'Publish Artifact'
  